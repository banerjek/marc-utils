filelist=("$@")
infile="${filelist[0]}"

if [[ -z ${infile} ]];then echo "You must supply a file name or expression (wildcards OK). Usage: marc2text [filename]";fi

echo
echo "This program generates files that Marcedit can read but which doesn't use dollar signs for subfields or provide mneumonics to increase speed and simplify analysis. If you need those features, use the text2marcedit utility"
echo

rm -f bad_*.txt

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { 
        if(length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support marc2text -- you need a version that supports the -b switch\\n")
                exit
        }
}

{
	large=last_pos=0
   leader=substr($0,1,24)
   baseaddress=substr(leader,13, 5) + 0
   record_content=substr($0, baseaddress + 1)
   directory=substr($0,25, baseaddress - 25)
   directory_length=length(directory)
   directory_check=(directory_length % 12)
   record_length = length($0) + 0

	record = "=LDR  "leader

	for (i=1; i<=directory_length; i=i+12) {
		directory_entry = substr(directory, i, 12)
		marc_tag = substr(directory, i, 3)

		field_length = substr(directory, i + 3, 4) - 1 
		starting_pos = substr(directory, i + 7, 5) + 1
		field_content = substr(record_content, starting_pos, field_length)

		if (starting_pos > last_pos && ((directory_length + starting_pos + field_length) < 98000)) {
			record = record"\\n="marc_tag"  "field_content
			last_pos = starting_pos
		} else {
			i = directory_length
			foundlarge++
			large=1
		}
	}

	if (length(leader) == 24) {print record > OUTFILE}
	if (NR % 10000 == 0){ printf "Records processed: "NR"\r" }

}
END { 
	ORS="\\n"
	print "";print NR " records were output to "OUTFILE
	if (foundlarge > 0) { print foundlarge" oversized records were found and truncated" }
}

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc

for file in "${filelist[@]}";do
	fileroot=$(echo "${file}" | sed 's/\.....\?$//')
	outfile="${fileroot}.txt"
	awk -v RS=$'\x1d' -v ORS=$'\n\n' -v FS=$'\x1e' -v OFS='\n' -v SUBFIELD=$'\x1f' -v OUTFILE="${outfile}" -b -f tmp_checkmarc "${file}"
done

sleep 1
rm -f tmp_checkmarc
