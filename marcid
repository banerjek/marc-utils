
infile="${1}"

if [[ ! -z $2 ]];then
	echo "${2}" > temp_ids
	identifier_file="temp_ids"
else
	identifier_file="ids"
fi

if [[ -z $1 || ! -f ${identifier_file} ]];then
	echo "Usage: marcid [filename] [id]"
	echo "Example: marcid myfile.mrc"
	echo 
	echo
	echo "It expects a list of identifiers in the exact same format"
	echo "as in the records in a file named 'ids.' If the optional id"
	echo "parameter is used, it looks only for that id and does not use"
	echo "the ids file"
	echo
	echo "Records containing that value in 001 or 907a will be output"

	if [[ -f ${identifier_file} ]];then
		echo "You need a list of identifiers named 'ids'"
		echo
	fi
	exit
else

	fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
	outfile="${fileroot}_extract.mrc"
fi


cat ${identifier_file} |tr "\n" $'\x1d' > tmp_identifiers

echo "Starting processing. Please wait"

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { records_found = 0 
        if (length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support  -- you need a version that supports the -b switch\\n")
                exit
        } 
}


function lookup_identifiers() {

	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == "001") {

			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5) 

			tag001 = substr(record_content, starting_pos, field_length - 1)

			if (seen[tag001]) {
				records_found++
				print $0 > OUTFILE
				i = directory_length
			}
				
		}

		if (substr(directory, i, 3) == "907") {

			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5) 

			split(field_content, subfields, SFS)

			bibno = substr(record_content, starting_pos, field_length - 1)
			split(bibno, subfields, SFS)

			for (subfield in subfields) {
				if (substr(subfields[subfield], 1, 1) == "a") {
					tag907a = substr(subfields[subfield],2)
					gsub(/^ *+| +$/, "", tag907a)
					if (seen[tag907a]) {
						records_found++
						print $0 > OUTFILE
					}
				}	
			}
		}
	}
}

{
if (NR==FNR) {
	seen[$1] = $0
	} 	else {
		ORS=RS
		leader=substr($0,1,24)
		baseaddress=substr(leader,13, 5) + 0
		directory=substr($0,25, baseaddress - 25)
		directory_length=length(directory) 
		directory_check=(directory_length % 12)
		record_content=substr($0, baseaddress + 1)
		
		if (directory_check == 0) {
			lookup_identifiers()
		}
		
		if (NR % 10000 == 0){ printf "Records processed: "NR"  Records found: %d\r", records_found }
		
	}
}
END { 
	ORS = "\\n"
	print NR" records have been processed and "records_found" records were found and written to "OUTFILE 
}

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc


awk -v RS=$'\x1d' -v ORS=$'\x1d' -v SFS=$'\x1f' -v FS=$'\x1e' -v OUTFILE="${outfile}" -b -f tmp_checkmarc tmp_identifiers  "${infile}"
echo

rm -f tmp_checkmarc tmp_identifiers
