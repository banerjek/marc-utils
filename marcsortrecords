if [[ -z $1 ]];then
	echo
   echo "Usage: marcsortrecords [filename] [marcid_field]"
   echo "This program expects a single identifier or input file of identifiers named 'ids'"
   echo "marcid_field is optional. If not specified, it will be 999i if UUID is detected, 907a if sierra .b number is detected, 001 otherwise"
   echo
   echo "Usage: marcsortrecords [filename] [marcid_field]"
   echo
   exit
fi	

infile="${1}"
idtag=${2}

if [[ -z $idtag ]];then
	echo "You must indicate which unique field is being sorted on"
	echo "Usage: marcsortrecords [filename] [marcid_field]"
	exit
fi

fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
unsorted="${fileroot}_unsorted"
sorted="${fileroot}_sorted.mrc"

rm -f "${sorted}" "${unsorted}"

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { 
        if (length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support marcsortrecords -- you need a version that supports the -b switch\\n")
                exit
        }
}
{
leader=substr($0,1,24)
baseaddress=substr(leader,13, 5) + 0
directory=substr($0,25, baseaddress - 25)
directory_length=length(directory) 
directory_check=(directory_length % 12)
record_content=substr($0, baseaddress + 1)

IDTAG3 = substr(IDTAG, 1, 3)
id_content = ""

if (directory_check == 0) {
	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == IDTAG3) {
			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5)

			if (length(IDTAG) == 3) {
				if (IDTAG == "001") { 
					id_content = substr(record_content, starting_pos + 0, field_length - 1)
				} else {
					id_content = substr(record_content, starting_pos + 1, field_length - 1)
				}
			}
	
		   if (length(IDTAG) == 4) {
		      search_subfield = substr(IDTAG, 4, 1)
				field_content = substr(record_content, starting_pos + 1, field_length - 1)
	
		      split(field_content, subfields, SFS)
		
		      for (subfield in subfields) {
		         if (substr(subfields[subfield], 1, 1) == search_subfield) {
		            id_content = substr(subfields[subfield],2)
						break
		         }
		      }
		   }
		}
	}
}

id_content=substr(id_content, 1, 100)
print id_content""RS""$0 > UNSORTED 


if (NR % 10000 == 0) if (NR % 10000 == 0){ printf "Extracting sort fields -- records processed: %d \r", NR }

}
END { printf "\\n" }
ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc


awk -v ORS='\n' -v FS=$'\x1e' -v RS=$'\x1d' -v SFS=$'\x1f' -v IDTAG=${idtag} -v UNSORTED="${unsorted}" -b -f tmp_checkmarc "${infile}"
echo
echo

echo "Sorting MARC file. Please be patient"
pv "${unsorted}" | sort -k1.1,1.100 > tmp_sorted

echo "Post processing sorted file. Please be patient"
pv tmp_sorted |sed 's/^.*\x1d//' |tr '\n' $'\x1d' > "${sorted}"

echo "Sorted records were output to ${sorted}                     " 

rm -f tmp_sorted tmp_checkmarc "${unsorted}"
