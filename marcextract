if [[ -z $3 ]];then
	echo "Usage: marcextract [filename] [marcfield1] [marcfield2] [marcfield3] ... [idtag]"
	echo "Subfield delimiter in MARC is hex 1F"
	echo
	exit
else
	infile="${1}"
	idtag="${@: -1}"
	shift
	marctags=("${@:1:$#-1}")
fi

fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
outfile="${fileroot}_extract.txt"


read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 
BEGIN { records_found = 0 

	if (length("Ð°") != 2) {
		printf("Your version of awk does not support marcsearch -- you need a version that supports the -b switch\\n")
		exit
	}
	id_field = IDTAG
	id_subfield = ""
	split(MARCTAGS, taglist, " ")
	field_cleaning_regex = "^["FS" ]+|["FS"]+$"
}

function extract_content() {
	if (directory_check == 0 && record_id != "") {
		for (i=1; i<=directory_length; i=i+12) {
			if (substr(directory, i, 3) == marc_field) {
			  field_length = substr(directory, i + 3, 4) + 0
				starting_pos = substr(directory, i + 7, 5)
			
				split(field_content, subfields, SFS)
			
			   	field_content = substr(record_content, starting_pos, field_length)
				gsub(field_cleaning_regex, "", field_content)
				split(field_content, subfields, SFS)
		
				if (marc_subfield == "") {
					print record_id"\t"marc_field"\t"field_content > OUTFILE
					foundrecs++
					} else {
			      		for (subfield in subfields) {
			        		if (substr(subfields[subfield], 1, 1) == marc_subfield) {
			           			field_content = substr(subfields[subfield],2)
											print record_id"\t"marc_field""marc_subfield"\t"field_content > OUTFILE
											foundrecs++
			        		}		
			      		}
			   	}
			}
		}		
	}
}

{

record_id=search_field=search_subfield=""
leader=substr($0,1,24)
baseaddress=substr(leader,13, 5) + 0
directory=substr($0,25, baseaddress - 25)
directory_length=length(directory) 
directory_check=(directory_length % 12)
record_content=substr($0, baseaddress + 1)

########### extract the id
if (directory_check == 0 && record_id == "") {

	if (length(IDTAG) == 4) {
		id_field = substr(IDTAG, 1, 3)
		id_subfield = substr(IDTAG, 4, 1)
	}

	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == id_field) {
			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5)
			field_content = ""
	

			if (substr(record_content, starting_pos + 3, 1) == SFS) {
				field_content = substr(record_content, starting_pos + 3, field_length - 3)
			} else {
				field_content = substr(record_content, starting_pos + 1, field_length - 1)
			}
	
			record_id = field_content

			if (id_subfield != "") {
	      split(record_id, subfields, SFS)
	
				for (subfield = 2; subfield <= length(subfields); subfield++) {
					if (substr(subfields[subfield], 1, 1) == id_subfield) {
						record_id = substr(subfields[subfield],2)
					}
				break
				}	
	     }
	     gsub(/^ *+| +$/, "", record_id)
		} 
	}
}


for (t in taglist) {
	marc_field = substr(taglist[t], 1, 3)
	marc_subfield = substr(taglist[t], 4, 1)
	extract_content()
}

if (NR % 10000 == 0){ printf("Records searched: "NR" Fields found: %d \r"), foundrecs }

}
END {
	print "Records searched: "NR" Fields found: "foundrecs" and output to "OUTFILE
}

ENDOFAWK

echo -e "${awkscript}" > tmp_marcextract
chmod 700 tmp_marcextract


awk -v RS=$'\x1d' -v ORS="\n" -v FS=$'\x1e' -v SFS=$'\x1f' -v OFS="\t" -v MARCTAGS="${marctags[*]}" -v OUTFILE="${outfile}" -v IDTAG="${idtag}" -b -f tmp_marcextract "${infile}"
echo
echo

rm -f tmp_marcextract
