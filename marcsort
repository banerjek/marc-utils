filelist=("$@")
infile="${filelist[0]}"

if [[ -z ${infile} ]];then echo "You must supply a file name, wildcards ok";fi

fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
outfile="${fileroot}_fixed.mrc"

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { 
        if(length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support marcadd -- you need a version that supports the -b switch\\n")
                exit
        }
}

{
	### no error correction or accommodation for bad directories -- use marcfix first

	leader=substr($0,1,24)
	base_address=substr(leader,13, 5) + 0
	record_content=substr($0, base_address + 1)

	directory=substr($0,25, base_address - 25)
	directory_length=length(directory)

	dir_pos = 0 
	new_directory = ""

	for (i=1; i<=directory_length; i=i+12) {
		dir_pos++
		entry = substr(directory, i, 12) 
		directory_arr[dir_pos] = entry
	}

	num_entries = asort(directory_arr)

	for (i=1; i<=num_entries; i++) {
		new_directory = new_directory""directory_arr[i] 
	} 
	new_directory = new_directory""OFS
	delete directory_arr

	print leader""new_directory""record_content > OUTFILE 
	if (NR % 10000 == 0){ printf "Records processed: %d \\r", NR}
}

END { 
	ORS="\\n"
	print "";print NR " records were output to "OUTFILE
}

ENDOFAWK

echo -e "${awkscript}" > tmp_marcsort
chmod 700 tmp_marcsort

for file in "${filelist[@]}";do
	fileroot=$(echo "${file}" | sed 's/\.....\?$//')
	outfile="${fileroot}_sorted.mrc"
	awk -v RS=$'\x1d' -v ORS=$'\x1d' -v FS=$'\x1e' -v OFS=$'\x1e' -v OUTFILE="${outfile}" -b -f tmp_marcsort "${file}"
done

sleep 1
rm -f tmp_marcsort
