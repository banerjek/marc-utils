
infile="${1}"

if [[ ! -z $2 ]];then
	tagfield=$2
else
	tagfield="001"	
fi

if [[ ! -f ${infile} ]];then
	echo "Usage: marcmissing [filename] [tagfield]"
	echo "Example: marcmissing myfile.mrc 907a"
	echo 
	echo "If tagfield isn't present, 001 is assumed"
	echo
	exit
else

	fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
	outfile="${fileroot}_missingtag.mrc"
fi

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { records_found = 0 
        if (length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support  -- you need a version that supports the -b switch\\n")
                exit
        } 
}

function find_subfield() {
		field_length = substr(directory, i + 3, 4) + 0
		starting_pos = substr(directory, i + 7, 5) 
		field_content = substr(record_content, starting_pos + 1, field_length - 1)

		 if (index(field_content, SEARCH) > 0) {
			SEEN = 1
			i = directory_length
		}
}

function find_tag() {
	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == TAG) {
			if (length(TAGFIELD) == 3) { 
				SEEN = 1
				i = directory_length
			} else {
				find_subfield()
			}
		}
	}

	if (SEEN == 0) {
		print $0 > OUTFILE
		records_found++
	}
}

{
	TAG = substr(TAGFIELD, 1, 3)

	if (length(TAGFIELD) == 4) {
		SUBFIELD =  substr(TAGFIELD, 4, 1)
		SEARCH = SFS""SUBFIELD
	}
	SEEN = 0
	leader=substr($0,1,24)
	baseaddress=substr(leader,13, 5) + 0
	directory=substr($0,25, baseaddress - 25)
	directory_length=length(directory) 
	directory_check=(directory_length % 12)
	record_content=substr($0, baseaddress + 1)
		
	if (directory_check == 0) {
		find_tag()
	}
		
	if (NR % 10000 == 0){ printf "Records processed: "NR"  Records lacking tags: %d\r", records_found }
}
END { 
	ORS = "\\n"
	print NR" records have been processed and "records_found" records without tags were found and written to "OUTFILE 
}

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc

awk -v RS=$'\x1d' -v ORS=$'\x1d' -v SFS=$'\x1f' -v FS=$'\x1e' -v TAGFIELD="${tagfield}" -v OUTFILE="${outfile}" -b -f tmp_checkmarc "${infile}"

echo

rm -f tmp_checkmarc 
