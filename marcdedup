if [[ -z $1  ]];then
	echo "Usage: marcdedup [filename] "
	exit
else
	infile="${1}"
fi


read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { records_found = 0 }
{
good_record=0

leader=substr($0,1,24)
baseaddress=substr(leader,13, 5) + 0
directory=substr($0,25, baseaddress - 25)
directory_length=length(directory) 
directory_check=(directory_length % 12)
record_content=substr($0, baseaddress + 1)

if (directory_check == 0) {
	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == "001") {
			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5) 
			record_id = substr(record_content, starting_pos, field_length)

			if (!seen[record_id]) { good_record = 1; seen[record_id] = 1 }
		}
	}
}
if ( good_record == 1 ) { 
	uniquerecs++
	print $0 > "unique_recs.mrc"
} else {
	duprecs++
	printf "%s\\n", record_id > "duplicates.txt"

}
if (NR % 10000 == 0){ printf "Records searched: "NR" with %d unique records and %d duplicates \r", uniquerecs, duprecs }

}

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc

awk -v RS=$'\x1d' -v ORS=$'\x1d' -v FS=$'\x1e' -b -f tmp_checkmarc "${infile}"
echo
echo
if [[ $count != "count" ]];then
	echo "Unique records output to unique_recs.mrc and duplicate ids output to duplicates.txt                     " 
fi
