filelist=("$@")
infile="${filelist[0]}"

if [[ -z ${infile} ]];then echo "You must supply a file name or expression (wildcards OK). Counts MARC tags in binary MARC files. Usage: marcsample [filename]";exit;fi

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { records_found = 0; sample_size = 0 }

function extract_subfields() { 
	field_length = substr(directory, i + 3, 4) + 0
	starting_pos = substr(directory, i + 7, 5) 
	field_content = ""
	delete subfields

	field_content = substr(record_content, starting_pos + 3, field_length - 3)

	if (substr(field_content, 1, 1) == SFS) {
		split(field_content, subfields, SFS)
		for (subfield_index in subfields) { 
			subfield = substr(subfields[subfield_index], 1, 1)

			if (! tagcount[marctag""subfield]) {
				print $0 > FILENAME"_sample"	
				sample_size++
			}
			tagcount[marctag""subfield]++ 
		}	
	} else {
		tagcount[marctag]++ 
	}
}


{
        if(length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support marcfc -- you need a version that supports the -b switch\\n")
                exit
        }

	leader=substr($0,1,24)
	baseaddress=substr(leader,13, 5) + 0
	directory=substr($0,25, baseaddress - 25)
	directory_length=length(directory) 
	directory_check=(directory_length % 12)
	record_content=substr($0, baseaddress + 1)
	printrecord=0
	
	for (i=1; i<=directory_length; i=i+12) {
		marctag = substr(directory, i, 3)
		extract_subfields()
	}
	
	if (NR % 1000 == 0){ printf "Records searched: "NR" Records extracted: %s\\r", sample_size }
}
END {
	printf "Records searched: "NR" Records extracted: %s\\n", sample_size
	printf sample_size" records were sent to "FILENAME"_sample\\n"
	n = asorti(tagcount, sorted_bytag)

	print "Total records: "NR"\\n" > OUTFILE

	for (tag=1; tag<=n; tag++) {
		printf "%s: %s\\n", sorted_bytag[tag], tagcount[sorted_bytag[tag]] > OUTFILE
	}
}

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc

for file in "${filelist[@]}";do
	fileroot=$(echo "${file}" | sed 's/\.....\?$//')
	outfile="${fileroot}_fieldcounts.txt"
	awk -v RS=$'\x1d' -v ORS=$'\x1d' -v FS=$'\x1e' -v OFS="\x1e" -v SFS=$'\x1f' -v OUTFILE="${outfile}" -b -f tmp_checkmarc "${file}"
	echo "Field counts exported to ${outfile}"
	echo
done
echo
rm -f tmp_checkmarc
