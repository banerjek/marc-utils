
if [[ -z $2  ]];then
	echo "Usage: marc-itemextract [filename] [systemtype] ]"
	echo 
	echo "001 is automatically stored and output."  
	echo "Items are expected to be one item per MARC tag"
	echo
	exit
else
	infile="${1}"
	tags=()
	labels=()

	fileroot=$(echo "${infile}" | sed 's/\.....\?$//')
	outfile="${fileroot}.tsv"
	rm -f ${outfile}
fi

knownsystems=("sierra")
foundsystem=0

for system in "${knownsystems[@]}";do
	if [[ ${2} == $system ]];then foundsystem=1;fi
done


if [[ ${foundsystem} -eq 0 ]];then
	echo "You must specify a system. The following systems are known"
	echo  ${knownsystems[@]}
	exit
fi

if [[ $2 == "sierra"  ]];then
	identifier="907a"
	item_field="945"
	tags[1]="a"
	tags[2]="b"
	tags[3]="c"
	tags[4]="g"
	tags[5]="i"
	tags[6]="j"
	tags[7]="l"
	tags[8]="m"
	tags[9]="n"
	tags[10]="o"
	tags[11]="p"
	tags[12]="q"
	tags[13]="r"
	tags[14]="s"
	tags[15]="t"
	tags[16]="u"
	tags[17]="v"
	tags[18]="w"
	tags[19]="x"
	tags[20]="y"
	tags[21]="z"

	labels[1]="CALL_MARC"
	labels[2]="CALL_NONMARC"
	labels[3]="VOL"
	labels[4]="COPY"
	labels[5]="BARCODE"
	labels[6]="AGENCY"
	labels[7]="LOCATION"
	labels[8]="MSG"
	labels[9]="NOTE"
	labels[10]="ICODE2"
	labels[11]="PRICE"
	labels[12]="IMSG"
	labels[13]="OPACMSG"
	labels[14]="STATUS"
	labels[15]="ITYPE"
	labels[16]="TOTCHK"
	labels[17]="TOTRENWL"
	labels[18]="YTDCIRC"
	labels[19]="LYCIRC"
	labels[20]="ITEMNUM"
	labels[21]="CREATED"
fi

taglist="$(echo ${tags[@]})"
labellist="$(echo ${labels[@]})"

echo "Starting processing. Please wait"

read -r -d '' awkscript << "ENDOFAWK"
#!/usr/bin/awk -f 

BEGIN { records_found = 0 
        if (length("Ð°") != 2) {
                badawk = 1
                printf("Your version of awk does not support  -- you need a version that supports the -b switch\\n")
                exit
        } else {

		split(TAGLIST, tags, " ")
		split(LABELLIST, labels, " ")
		num_tags = length(tags)
	
	}
}

function extract_subfields() { 
	for (j=1;j<=num_tags;j++) { item_subfield[j] = "" }

	split(field_content, subfields, SFS)
	
	for (j=1;j<=num_tags;j++) {
		for (subfield in subfields) {
			if (substr(subfields[subfield], 1, 1) == tags[j]) {
				item_subfield[j] = substr(subfields[subfield],2)
				gsub(/^[ \\-]*$/, "", item_subfield[j])
				item_subfield[j] = gensub(trimspace_regex, "\\1", 1, item_subfield[j])
			}	
		}
	}

	lineout = tag001"\t"bibno

	for (j=1;j<=num_tags;j++) {
		lineout = lineout"\t"item_subfield[j]
	}
	print lineout >> OUTFILE
	lineout = ""
}

function extract_identifiers() {
	tag001=bibno=""
	tagid = substr(IDENTIFIER, 4, 1)

	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == "001") {

			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5) 

			tag001 = substr(record_content, starting_pos, field_length - 1)
		}

		if (bibno == "") {
			if (substr(directory, i, 3) == substr(IDENTIFIER, 1, 3)) {

				field_length = substr(directory, i + 3, 4) + 0
				starting_pos = substr(directory, i + 7, 5) 

				split(field_content, subfields, SFS)

				bibno = substr(record_content, starting_pos, field_length - 1)
				split(bibno, subfields, SFS)
	
				for (subfield in subfields) {
					if (tagid == substr(subfields[subfield], 1, 1)) {
						bibno = substr(subfields[subfield],2)
					}	
				}
			}
		}
	}
}

function extract_items() {
	for (i=1; i<=directory_length; i=i+12) {
		if (substr(directory, i, 3) == ITEMFIELD) {

			field_length = substr(directory, i + 3, 4) + 0
			starting_pos = substr(directory, i + 7, 5) 
			field_content = ""

			if (substr(record_content, starting_pos + 3, 1) == SFS) {
				field_content = substr(record_content, starting_pos + 3, field_length - 3)
			} else {
				field_content = substr(record_content, starting_pos + 1, field_length - 1)
			}
			extract_subfields()
		}
	}
}

{

leader=substr($0,1,24)
baseaddress=substr(leader,13, 5) + 0
directory=substr($0,25, baseaddress - 25)
directory_length=length(directory) 
directory_check=(directory_length % 12)
record_content=substr($0, baseaddress + 1)
trimspace_regex = "^ +(.*) +$"

if (directory_check == 0) {
	if (NR == 1) { 
		lineout = "tag001\tBIBNO"
		for (i=1;i<=num_tags;i++) {
			lineout = lineout"\t"labels[i]
		}
		print lineout > OUTFILE
		lineout = ""
	}
	extract_identifiers()
	extract_items()
}

if (NR % 10000 == 0){ printf "Records processed: "NR"\r" }

}
END { print NR" records have been processed and sent to "OUTFILE }

ENDOFAWK

echo -e "${awkscript}" > tmp_checkmarc
chmod 700 tmp_checkmarc

awk -v RS=$'\x1d' -v ORS="\n" -v SFS=$'\x1f' -v FS=$'\x1e' -v OFS="\t" -v IDENTIFIER="${identifier}" -v ITEMFIELD="${item_field}" -v TAGLIST="${taglist}" -v LABELLIST="${labellist}" -v OUTFILE="${outfile}" -b -f tmp_checkmarc "${infile}"
echo

rm -f tmp_checkmarc
